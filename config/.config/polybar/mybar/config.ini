;; File Inclusion
; include an external file, like module file, etc.
include-file = ~/.config/polybar/mybar/colors.ini
include-file = ~/.config/polybar/mybar/modules.ini

[bar]
fill = ⏽
empty = ⏽
indicator = 

[bar/bar]

width  = 100%
height = 25

offset-x = 0
offset-y = 0

background = ${colors.background}
foreground = ${colors.foreground}

border-size = 10
border-left-size = 0
border-right-size = 0
border-color = ${colors.background}

font-0 = "Hack:size=10;2"
font-1 = "Font Awesome 6 Free Solid:size=12;4"
font-2 = "JetBrainsMono Nerd Font:size=12;4"
font-3 = "Hack Nerd Font:size=12;4"
font-4 = "WenQuanYi Zen Hei Mono:size=10;4"

modules-left = launcher sep dwm
modules-center = 
modules-right = cpu memory alsa date

; Number of spaces to add at the beginning/end of the bar
; Individual side values can be defined using:
;   padding-{left,right}
padding = 2

; Number of spaces to add before/after each module
; Individual side values can be defined using:
;   module-margin-{left,right}
module-margin-left = 1
module-margin-right = 1

; Value used for drawing rounded corners
; Note: This shouldn't be used together with border-size because the border 
; doesn't get rounded
; Individual top/bottom values can be defined using:
;   radius-{top,bottom}
radius-top = 0.0
radius-bottom = 0.0

; Under-/overline pixel size and argb color
; Individual values can be defined using:
;   {overline,underline}-size
;   {overline,underline}-color
line-size = 3
line-color = ${colors.background}

tray-position = right

; If true, the bar will not shift its
; contents when the tray changes
tray-detached = false

; Tray icon max size
tray-maxsize = 17

; Background color for the tray container 
; ARGB color (e.g. #f00, #ff992a, #ddff1023)
; By default the tray container will use the bar
; background color.
tray-background = ${colors.background}

; Tray offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
tray-offset-x = 0
tray-offset-y = 0

; Pad the sides of each tray icon
tray-padding = 2

; Scale factor for tray clients
tray-scale = 1.0

; Restack the bar window and put it above the
; selected window manager's root
;
; Fixes the issue where the bar is being drawn
; on top of fullscreen window's
;
; Currently supported WM's:
;   bspwm
;   i3 (requires: `override-redirect = true`)
;;wm-restack =

; Set a DPI values used when rendering text
; This only affects scalable fonts
dpi-x = 100
dpi-y = 100

; Enable support for inter-process messaging
; See the Messaging wiki page for more details.
enable-ipc = true

[settings]
; The throttle settings lets the eventloop swallow up til X events
; if they happen within Y millisecond after first event was received.
; This is done to prevent flood of update event.
;
; For example if 5 modules emit an update event at the same time, we really
; just care about the last one. But if we wait too long for events to swallow
; the bar would appear sluggish so we continue if timeout
; expires or limit is reached.
throttle-output = 5
throttle-output-for = 10

; Time in milliseconds that the input handler will wait between processing events
;throttle-input-for = 30

; Reload upon receiving XCB_RANDR_SCREEN_CHANGE_NOTIFY events
screenchange-reload = true

; Compositing operators
; @see: https://www.cairographics.org/manual/cairo-cairo-t.html#cairo-operator-t
compositing-background = source
compositing-foreground = over
compositing-overline = over
compositing-underline = over
compositing-border = over

; Define fallback values used by all module formats
;format-foreground = 
;format-background = 
;format-underline =
;format-overline =
;format-spacing =
;format-padding =
;format-margin =
;format-offset =

; Enables pseudo-transparency for the bar
; If set to true the bar can be transparent without a compositor.
pseudo-transparency = false

;; _-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_
